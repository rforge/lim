\name{Lsei}
\alias{Lsei}
\alias{Lsei.lim}
\alias{Lsei.limfile}
\alias{Lsei.character}
\alias{Lsei.double}
\title{
  Solves a linear inverse model using the least squares method.
}
\description{
  Solves a linear inverse model using the least squares method

  Input presented as:
  \itemize{
    \item matrices E, F, A, B, G, H (Lsei.double) or
    \item a list (Lsei.lim) or
    \item as a lim input file (Lsei.limfile)
  }
  Useful for solving overdetermined lims.
}

\usage{
Lsei(...)
\method{Lsei}{double}(...)
\method{Lsei}{lim}(lim, exact = NULL, parsimonious = FALSE, ...)
\method{Lsei}{limfile}(file, exact = NULL, parsimonious = FALSE, 
             verbose = TRUE, ...)
\method{Lsei}{character}(...)}
\arguments{
  \item{lim }{a list that contains the linear inverse model
    specification, as  generated by function \code{setup.limfile}.
  }
  \item{exact }{if not \code{NULL}, a vector containing the numbers of
    the equations to be solved exactly; if \code{NULL}, all equations
    are considered exact.
  }
  \item{parsimonious }{if \code{TRUE}, also minimises the sum of squared
    unknowns.
  }
  \item{file }{name of the inverse input file.
  }
  \item{verbose }{if \code{TRUE}: when reading the file,
    prints warnings and messages to the screen.
  }
  \item{... }{other arguments passed to function
    \code{\link[limSolve]{lsei}} from package\code{limSolve}.
  }
}
\value{
  a list containing:
  \item{X }{vector containing the solution of the least squares problem.
  }
  \item{residualNorm }{scalar, the sum of residuals of equalities and
    violated inequalities.
  }
  \item{solutionNorm }{scalar, the value of the minimised quadratic
    function at the solution.
  }
  \item{IsError }{\code{TRUE} if an error occurred.
  }
  \item{Error }{error text.
  }
  \item{type }{lsei.
  }
}

\author{
  Karline Soetaert <k.soetaert@nioo.knaw.nl>
}
\examples{
  Lsei(LIMRigaAutumn, parsimonious = TRUE)
}

\references{
  K. H. Haskell and R. J. Hanson, An algorithm for linear least
  squares problems with equality and nonnegativity constraints,
  Report SAND77-0552, Sandia Laboratories, June 1978.

  K. H. Haskell and R. J. Hanson, Selected algorithms for the linearly
  constrained least squares problem - a users guide,
  Report SAND78-1290, Sandia Laboratories,August 1979.

  K. H. Haskell and R. J. Hanson, An algorithm for linear least squares
  problems with equality and nonnegativity constraints, Mathematical
  Programming 21 (1981), pp. 98-118.

  R. J. Hanson and K. H. Haskell, Two algorithms for the linearly
  constrained least squares problem, ACM Transactions on Mathematical
  Software, September 1982.
}

\details{
  Solves the following inverse problem:
  \deqn{\min(||AAx-BB||^2)}, the approximate equations
    subject to
  \deqn{Ex=F}, the mass balances
  \deqn{Gx>=H}, the constraints.

  and where \code{E} and \code{F} make up the equations from \code{A}
  and \code{B}, as specified by vector \code{exact}.

  \code{AA} and \code{BB} are the equations from \code{A} and \code{B},
  NOT in vector \code{exact}.

  in case \code{exact} = \code{NULL}, there are no approximate equations.

  in case \code{parsimonious} = \code{TRUE}, then the sum of squared
  unknowns is also minimised. This means that \code{AA} is
  augmented with the unity matrix (of size Nunknowns) and \code{BB}
  contains Nunknowns additional zeros.

  For overdetermined lim problems, for instance, the inverse equations
  may be split up in the mass balance equations which have to be exactly met
  and the other equations which have to be approximated.

  This is, it is assumed that the first *NComponents* equations, the mass
  balances, should be met exactly and the call to the function is:
  \code{Lsei(lim,exact = 1:lim$NComponents,...)}

  If the lim is underdetermined, an alternative is to use
  \code{\link{Ldei}} instead.

  This will return the parsimonious solution.

  The results should be similar with \code{Lsei(...,parsimonious=TRUE)}.

  In theory both \code{Lsei.lim} and \code{Ldei} should return the same
  value for underdetermined systems.
  
}
\seealso{
  \code{\link[limSolve]{lsei}}, the more general function from
    package limSolve

  \code{\link{Linp}}, to solve the linear inverse problem by
    linear programming

  \code{\link{Ldei}}, to solve the linear inverse problem by
    least distance programming

  function \code{\link[limSolve]{lsei}} from package\code{limSolve}
}

\keyword{algebra}
\keyword{array}
\keyword{optimize}

